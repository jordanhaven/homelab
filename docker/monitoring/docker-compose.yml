version: '3.1'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  reverseproxy-nw:
    external: true

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    #ports:
    #  - "9090:9090"
    volumes:
      - ${PROMETHEUS_DIR}:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/config.yml"
    networks:
      - reverseproxy-nw

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    #ports:
    #  - "3000:3000"
    mem_limit: 4gb
    environment:
      TZ: "America/New_York"
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel"
      GF_PATHS_DATA: "/var/lib/grafana"
      GF_DEFAULT_INSTANCE_NAME: "home"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_SERVER_ENABLE_GZIP: "true"
      GF_SERVER_DOMAIN: ${GF_SERVER_DOMAIN}
    volumes:
      - grafana-data:/var/lib/grafana
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
    restart: unless-stopped
    networks:
      - reverseproxy-nw

  influxdb-pfsense:
    image: "influxdb:1.8.3-alpine"
    container_name: influxdb
    hostname: influxdb
    mem_limit: 10gb
    ports:
      - "2003:2003"
      - "8086:8086"
    environment:
      TZ: "America/New_York"
      INFLUXDB_DATA_QUERY_LOG_ENABLED: "false"
      INFLUXDB_REPORTING_DISABLED: "true"
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_ADMIN_USER: "admin"
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
      INFLUXDB_USER: "pfsense"
      INFLUXDB_USER_PASSWORD: ${INFLUXDB_USER_PASSWORD}
      INFLUXDB_DB: "pfsense"
    volumes:
      - ${INFLUXDB_DATA}:/var/lib/influxdb
    logging:
      driver: "json-file"
      options:
        max-size: "100M"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - reverseproxy-nw

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    # ports:
    #   - "8080:8080"
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - reverseproxy-nw

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - ${UPTIME_KUMA_DIR}:/app/data
    #ports:
    #  - 3001:3001
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - reverseproxy-nw

  scrutiny:
    container_name: scrutiny
    image: analogj/scrutiny
    cap_add:
      - SYS_RAWIO
#    ports:
#      - "8080:8080"
    volumes:
      - /run/udev:/run/udev:ro
      - ${SCRUTINY_CONFIG}:/scrutiny/config
    devices:
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
      - "/dev/sde"
      - "/dev/sdf"
      - "/dev/sdg"
      - "/dev/sdh"
      - "/dev/sdi"
    networks:
      - reverseproxy-nw
    restart: always
