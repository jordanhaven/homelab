version: '3.1'
networks:
  nginx-proxy-manager-nw:
  keycloak-nw:
  reverseproxy-nw:
    external: true

services:
  # unused in this stack, managed locally, kept here for documentation
  #portainer:
  #  image: 'portainer/portainer-ce:latest'
  #  container_name: portainer
  #  restart: always
  #  privileged: true
  #  volumes:
  #    - ${PORTAINER_DIR}:/data
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  ports:
  #    - '9443:9443'
  #  networks:
  #    - reverseproxy-nw

  nginx-proxy-manager:
    container_name: proxy-manager
    image: 'jc21/nginx-proxy-manager:github-pr-1388'
    restart: always
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      - DB_MYSQL_HOST=nginx-proxy-manager-db
      - DB_MYSQL_PORT=3306
      - DB_MYSQL_USER=npm
      - DB_MYSQL_PASSWORD=${NPM_DB_MYSQL_PASSWORD}
      - DB_MYSQL_NAME=npm
    volumes:
      - ${NPM_DATA_DIR}:/data:Z
      - ${NPM_LETSENCRYPT}:/etc/letsencrypt:Z
      - ${NPM_CONFIG_JSON}:/app/config/production.json
    networks:
      - nginx-proxy-manager-nw
      - reverseproxy-nw

  nginx-proxy-manager-db:
    container_name: proxy-manager-db
    image: 'jc21/mariadb-aria:latest'
    restart: always
    environment:
      - MYSQL_DATABASE=npm
      - MYSQL_USER=npm
      - MYSQL_PASSWORD=${NPM_DB_MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${NPM_MYSQL_ROOT_PASSWORD}
    volumes:
      - ${NPM_MYSQL}:/var/lib/mysql:Z
    networks:
      - nginx-proxy-manager-nw


  unifi-controller:
    image: lscr.io/linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      - PUID=${UNIFI_PUID}
      - PGID=${UNIFI_PGID}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - ${UNIFI_CONFIG_DIR}:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      #- 8443:8443
      #- 1900:1900/udp #optional
      #- 8843:8843 #optional
      #- 8880:8880 #optional
      #- 6789:6789 #optional
      #- 5514:5514/udp #optional
    restart: unless-stopped
    networks:
      - reverseproxy-nw

  docker-registry:
    container_name: "docker-registry"
    image: registry:2
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - ./data:/data
    networks:
        - reverseproxy-nw
    restart: unless-stopped